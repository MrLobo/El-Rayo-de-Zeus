<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- Fichero Ant para la compilacion de Ogre -->
<!-- Marco Antonio Gomez Martin -->
<!-- Septiembre 2010 -->

<project name="Lua" default="build">

<!-- ==================== -->
<!-- PROPIEDADES DEL PROYECTO -->
<!-- ==================== -->

<!--<property name="vslogfile" value="${basedir}/vslog.txt"/>-->
<property name="lua51" value="LUA51VS2010.sln"/>

<patternset id="vctmpfiles">
	<include name="**/*.suo"/>
	<include name="**/*.ncb"/>
	<include name="**/*.exp"/>
	<include name="**/*.ilk"/>
	<include name="**/*.user"/>
</patternset>

<taskdef resource = "vcTasks.properties" classpath="vcTask"/>

<!-- ================================ -->
<!-- TARGET DE INVOCACION A VISUAL STUDIO -->
<!-- ================================ -->

<!-- Objetivo que compila un proyecto de VC10.
Parámetros (utilizando propiedades):
	projectfolder: Directorio donde está el SLN.
	buildmode: Configuracion. Normalmente, Debug o Release.
	rebuild: "true" si se quiere recompilar; false si no
	project: Fichero .sln a compilar. Se pueden poner comodines ("**/*.sln").
	vslogfile: fichero donde se guarda el log de la compilacion (se borra luego).
-->
<target name="windowsbuilder">
	<vc10 projectfolder="${projectfolder}" 
		  buildmode="${buildmode}"
		  rebuild="${rebuild}">
		<!--logfile="${vslogfile}">-->
	  <targets dir="${projectfolder}" includes="${project}"/>
	</vc10>
	<!--<delete file = "${vslogfile}"/>-->
</target>

<!-- Objetivo que compila el proyecto.
Parametros:
	config: Debug o Release
	rebuild: "true" si se quiere recompilar; false si no.
-->
<target name="compilaSln">
	<antcall target="windowsbuilder">
		<!--<param name="projectfolder" value="./vcproject"/>-->
		<param name="projectfolder" value="${basedir}/vcproject"/>
		<param name="buildmode" value="${config}"/>
		<param name="project" value="${lua51}"/>
	</antcall>
</target>

<!-- =============== -->
<!-- TARGETS DE LIMPIEZA -->
<!-- =============== -->

<target name="cleanDebug"
		description="Elimina los ficheros de la compilacion en Debug">
	<delete includeemptydirs="true" failonerror="false">
		<fileset dir="./bin/Debug" />
		<fileset dir="./lib/Debug" />
		<fileset dir="./vcproject/Debug" />
	</delete>
</target>

<target name="cleanRelease"
		description="Elimina los ficheros de la compilacion en Release">
	<delete includeemptydirs="true" failonerror="false">
		<fileset dir="./bin/Release" />
		<fileset dir="./lib/Release" />
		<fileset dir="./vcproject/Release" />
	</delete>
</target>

<target name="clean"
		description="Elimina ficheros de compilación"
		depends="cleanDebug, cleanRelease">
</target>

<!-- ================================ -->
<!-- TARGETS DE CREACION DE DOCUMENTACION -->
<!-- ================================ -->

<target name="doxygen"
		description="Genera la documentación, si la hay.">
		<taskdef name="doxygen" classname="org.doxygen.tools.DoxygenTask" />
		<doxygen configFilename="Doxyfile"/>
</target>

<!-- ================================ -->
<!-- TARGETS DE PUBLICACION DE RESULTADOS -->
<!-- AL DIRECTORIO dependencies -->
<!-- ================================ -->

  <target name="publishRelease">
    <mkdir dir="../include/lua"/>
    <copy file="bin/Release/lua51.dll" todir="../bin/Release"/>
    <copy file="lib/Release/lua51.lib" todir="../lib/Release"/>
    <copy file="src/lua.h" todir="../include/lua"/>
    <copy file="src/luaconf.h" todir="../include/lua"/>
    <copy file="src/lualib.h" todir="../include/lua"/>
    <copy file="src/lauxlib.h" todir="../include/lua"/>
  </target>
  
  <target name="publishDebug">
    <mkdir dir="../include/lua"/>
    <copy file="bin/Release/lua51.dll" todir="../bin/Debug"/>
    <copy file="lib/Release/lua51.lib" todir="../lib/Debug"/>
    <copy file="src/lua.h" todir="../include/lua"/>
    <copy file="src/luaconf.h" todir="../include/lua"/>
    <copy file="src/lualib.h" todir="../include/lua"/>
    <copy file="src/lauxlib.h" todir="../include/lua"/>
  </target>  

<target name="publishLibBinDebug">
	<copy todir="../lib/Debug">
		<!--<fileset dir="./lib/Debug" includes="lua51.lib"/>-->
		<fileset dir="./lib" includes="lua51.lib"/>
	</copy>
	<copy todir="../bin/Debug">
		<!--<fileset dir="./bin/Debug" includes="lua51.dll"/>-->
		<fileset dir="./bin" includes="lua51.dll"/>
	</copy>
</target>

<target name="publishLibBinRelease">
	<copy todir="../lib/Release">
		<fileset dir="./lib/Release" includes="lua51.lib"/>
		<!--<fileset dir="./lib" includes="lua51.lib"/>-->
	</copy>
	<copy todir="../bin/Release">
		<fileset dir="./bin/Release" includes="lua51.dll"/>
		<!--<fileset dir="./bin" includes="lua51.dll"/>-->
	</copy>
</target>


<!-- ============================== -->
<!-- TARGETS DE COMPILACION INCREMENTAL -->
<!-- ============================== -->

<!-- Objetivo que compila el proyecto en modo Debug. -->
<target name="debug"
		description="Compilación (incremental) en modo Debug">

	<antcall target="compilaSln">
		<param name="config" value="Debug"/>
		<param name="rebuild" value="false"/>
	</antcall>

	<!-- Y publicamos los resultados (copiamos las .dll al Exes) -->
	<antcall target="publishLibBinDebug"/>
	
	<!-- Y los ficheros de cabecera -->
	<antcall target="publishDebug"/>	

</target>

<!-- Objetivo que compila el proyecto en modo Release. -->
<target name="release"
		description="Compilación (incremental) en modo Release">

	<antcall target="compilaSln">
		<param name="config" value="Release"/>
		<param name="rebuild" value="false"/>
	</antcall>

  <!-- Y publicamos los resultados. (copiamos las .dll al Exes) -->
  <antcall target="publishLibBinRelease"/>

  <!-- Y los ficheros de cabecera -->
  <antcall target="publishRelease"/>

</target>

<!-- Objetivo que compila el proyecto (Debug+Release) de forma incremental. -->
<target name="build"
		description="Compilación (incremental) Debug y Release."
		depends="debug, release"/>

<!-- =========================== -->
<!-- TARGETS DE COMPILACION COMPLETA -->
<!-- =========================== -->

<!-- Objetivo que compila todo el proyecto en modo Debug. -->
<target name="redebug"
		description="Compilación desde cero en modo Debug"
		depends="cleanDebug">

	<antcall target="compilaSln">
		<param name="config" value="Debug"/>
		<param name="rebuild" value="true"/>
	</antcall>

    <!-- Y publicamos los resultados. ( copiamos las .dll al Exes) -->
    <antcall target="publishLibBinDebug"/>

    <!-- Y los ficheros de cabecera -->
    <antcall target="publishDebug"/>

</target>

<!-- Objetivo que compila todo el proyecto en modo Release. -->
<target name="rerelease"
		description="Compilación desde cero en modo Release"
		depends="cleanRelease">

	<antcall target="compilaSln">
		<param name="config" value="Release"/>
		<param name="rebuild" value="true"/>
	</antcall>

    <!-- Y publicamos los resultados (copiamos las .dll al Exes) -->
    <antcall target="publishLibBinRelease"/>

    <!-- Y los ficheros de cabecera -->
    <antcall target="publishRelease"/>

</target>

<!-- Objetivo que compila todo el proyecto (Debug+Release). -->
<target name="rebuild"
		description="Compilación desde cero en Debug y Release."
		depends="redebug, rerelease"/>

<!-- ======================= -->
<!-- TARGETS PARA CRUISE CONTROL --> 
<!-- ======================= -->

<target name="CruiseControl"
		description="Compilacion para CruiseControl."
		depends="build">
</target>

</project>